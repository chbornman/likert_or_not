name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        working-directory: ./frontend
        run: bun install
      
      - name: Run linter
        working-directory: ./frontend
        run: bun run lint
      
      - name: Run type check
        working-directory: ./frontend
        run: bun run build
      
      - name: Run unit tests
        working-directory: ./frontend
        run: bun test --coverage
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
      
      - name: Run E2E tests
        working-directory: ./frontend
        run: |
          bunx playwright install chromium
          bun test:e2e
        env:
          HEADLESS: true
          TEST_URL: http://localhost:5173

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: backend -> target
      
      - name: Run cargo fmt
        working-directory: ./backend
        run: cargo fmt -- --check
      
      - name: Run clippy
        working-directory: ./backend
        run: cargo clippy -- -D warnings
      
      - name: Run tests
        working-directory: ./backend
        run: cargo test --all-features
        env:
          DATABASE_URL: sqlite::memory:
          RUST_BACKTRACE: 1
      
      - name: Generate test coverage
        working-directory: ./backend
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin --out Xml
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/cobertura.xml
          flags: backend
          name: backend-coverage

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: oven-sh/setup-bun@v1
      
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      
      - name: Setup test environment
        run: |
          cp .env.example .env
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db" >> .env
          echo "ADMIN_PASSWORD=test_password" >> .env
      
      - name: Run migrations
        working-directory: ./backend
        run: |
          cargo install sqlx-cli --no-default-features --features postgres
          sqlx migrate run
      
      - name: Start backend server
        working-directory: ./backend
        run: |
          cargo build --release
          ./target/release/backend &
          sleep 5
      
      - name: Start frontend dev server
        working-directory: ./frontend
        run: |
          bun install
          bun run dev &
          sleep 10
      
      - name: Run integration tests
        working-directory: ./frontend
        run: |
          bunx playwright install chromium
          bun test test/e2e
        env:
          TEST_URL: http://localhost:5173
          API_URL: http://localhost:8080
          ADMIN_PASSWORD: test_password

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build Docker images
        run: |
          docker compose build
      
      - name: Test Docker compose
        run: |
          docker compose up -d
          sleep 10
          curl -f http://localhost:5173 || exit 1
          curl -f http://localhost:8080/health || exit 1
          docker compose down

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Check for security vulnerabilities in dependencies
        working-directory: ./backend
        run: |
          cargo install cargo-audit
          cargo audit